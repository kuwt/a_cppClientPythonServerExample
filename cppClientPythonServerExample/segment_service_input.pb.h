// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: segment_service_input.proto

#ifndef PROTOBUF_INCLUDED_segment_5fservice_5finput_2eproto
#define PROTOBUF_INCLUDED_segment_5fservice_5finput_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_segment_5fservice_5finput_2eproto 

namespace protobuf_segment_5fservice_5finput_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_segment_5fservice_5finput_2eproto
class segment_service_input;
class segment_service_inputDefaultTypeInternal;
extern segment_service_inputDefaultTypeInternal _segment_service_input_default_instance_;
class segment_service_input_Mat;
class segment_service_input_MatDefaultTypeInternal;
extern segment_service_input_MatDefaultTypeInternal _segment_service_input_Mat_default_instance_;
namespace google {
namespace protobuf {
template<> ::segment_service_input* Arena::CreateMaybeMessage<::segment_service_input>(Arena*);
template<> ::segment_service_input_Mat* Arena::CreateMaybeMessage<::segment_service_input_Mat>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class segment_service_input_Mat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:segment_service_input.Mat) */ {
 public:
  segment_service_input_Mat();
  virtual ~segment_service_input_Mat();

  segment_service_input_Mat(const segment_service_input_Mat& from);

  inline segment_service_input_Mat& operator=(const segment_service_input_Mat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  segment_service_input_Mat(segment_service_input_Mat&& from) noexcept
    : segment_service_input_Mat() {
    *this = ::std::move(from);
  }

  inline segment_service_input_Mat& operator=(segment_service_input_Mat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const segment_service_input_Mat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const segment_service_input_Mat* internal_default_instance() {
    return reinterpret_cast<const segment_service_input_Mat*>(
               &_segment_service_input_Mat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(segment_service_input_Mat* other);
  friend void swap(segment_service_input_Mat& a, segment_service_input_Mat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline segment_service_input_Mat* New() const final {
    return CreateMaybeMessage<segment_service_input_Mat>(NULL);
  }

  segment_service_input_Mat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<segment_service_input_Mat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const segment_service_input_Mat& from);
  void MergeFrom(const segment_service_input_Mat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(segment_service_input_Mat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes image_data = 3;
  void clear_image_data();
  static const int kImageDataFieldNumber = 3;
  const ::std::string& image_data() const;
  void set_image_data(const ::std::string& value);
  #if LANG_CXX11
  void set_image_data(::std::string&& value);
  #endif
  void set_image_data(const char* value);
  void set_image_data(const void* value, size_t size);
  ::std::string* mutable_image_data();
  ::std::string* release_image_data();
  void set_allocated_image_data(::std::string* image_data);

  // uint32 width = 1;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:segment_service_input.Mat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr image_data_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_segment_5fservice_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class segment_service_input : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:segment_service_input) */ {
 public:
  segment_service_input();
  virtual ~segment_service_input();

  segment_service_input(const segment_service_input& from);

  inline segment_service_input& operator=(const segment_service_input& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  segment_service_input(segment_service_input&& from) noexcept
    : segment_service_input() {
    *this = ::std::move(from);
  }

  inline segment_service_input& operator=(segment_service_input&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const segment_service_input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const segment_service_input* internal_default_instance() {
    return reinterpret_cast<const segment_service_input*>(
               &_segment_service_input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(segment_service_input* other);
  friend void swap(segment_service_input& a, segment_service_input& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline segment_service_input* New() const final {
    return CreateMaybeMessage<segment_service_input>(NULL);
  }

  segment_service_input* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<segment_service_input>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const segment_service_input& from);
  void MergeFrom(const segment_service_input& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(segment_service_input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef segment_service_input_Mat Mat;

  // accessors -------------------------------------------------------

  // .segment_service_input.Mat img = 2;
  bool has_img() const;
  void clear_img();
  static const int kImgFieldNumber = 2;
  private:
  const ::segment_service_input_Mat& _internal_img() const;
  public:
  const ::segment_service_input_Mat& img() const;
  ::segment_service_input_Mat* release_img();
  ::segment_service_input_Mat* mutable_img();
  void set_allocated_img(::segment_service_input_Mat* img);

  // uint32 class_id = 1;
  void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 class_id() const;
  void set_class_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:segment_service_input)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::segment_service_input_Mat* img_;
  ::google::protobuf::uint32 class_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_segment_5fservice_5finput_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// segment_service_input_Mat

// uint32 width = 1;
inline void segment_service_input_Mat::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 segment_service_input_Mat::width() const {
  // @@protoc_insertion_point(field_get:segment_service_input.Mat.width)
  return width_;
}
inline void segment_service_input_Mat::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:segment_service_input.Mat.width)
}

// uint32 height = 2;
inline void segment_service_input_Mat::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 segment_service_input_Mat::height() const {
  // @@protoc_insertion_point(field_get:segment_service_input.Mat.height)
  return height_;
}
inline void segment_service_input_Mat::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:segment_service_input.Mat.height)
}

// bytes image_data = 3;
inline void segment_service_input_Mat::clear_image_data() {
  image_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& segment_service_input_Mat::image_data() const {
  // @@protoc_insertion_point(field_get:segment_service_input.Mat.image_data)
  return image_data_.GetNoArena();
}
inline void segment_service_input_Mat::set_image_data(const ::std::string& value) {
  
  image_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:segment_service_input.Mat.image_data)
}
#if LANG_CXX11
inline void segment_service_input_Mat::set_image_data(::std::string&& value) {
  
  image_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:segment_service_input.Mat.image_data)
}
#endif
inline void segment_service_input_Mat::set_image_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:segment_service_input.Mat.image_data)
}
inline void segment_service_input_Mat::set_image_data(const void* value, size_t size) {
  
  image_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:segment_service_input.Mat.image_data)
}
inline ::std::string* segment_service_input_Mat::mutable_image_data() {
  
  // @@protoc_insertion_point(field_mutable:segment_service_input.Mat.image_data)
  return image_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* segment_service_input_Mat::release_image_data() {
  // @@protoc_insertion_point(field_release:segment_service_input.Mat.image_data)
  
  return image_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void segment_service_input_Mat::set_allocated_image_data(::std::string* image_data) {
  if (image_data != NULL) {
    
  } else {
    
  }
  image_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_data);
  // @@protoc_insertion_point(field_set_allocated:segment_service_input.Mat.image_data)
}

// -------------------------------------------------------------------

// segment_service_input

// uint32 class_id = 1;
inline void segment_service_input::clear_class_id() {
  class_id_ = 0u;
}
inline ::google::protobuf::uint32 segment_service_input::class_id() const {
  // @@protoc_insertion_point(field_get:segment_service_input.class_id)
  return class_id_;
}
inline void segment_service_input::set_class_id(::google::protobuf::uint32 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:segment_service_input.class_id)
}

// .segment_service_input.Mat img = 2;
inline bool segment_service_input::has_img() const {
  return this != internal_default_instance() && img_ != NULL;
}
inline void segment_service_input::clear_img() {
  if (GetArenaNoVirtual() == NULL && img_ != NULL) {
    delete img_;
  }
  img_ = NULL;
}
inline const ::segment_service_input_Mat& segment_service_input::_internal_img() const {
  return *img_;
}
inline const ::segment_service_input_Mat& segment_service_input::img() const {
  const ::segment_service_input_Mat* p = img_;
  // @@protoc_insertion_point(field_get:segment_service_input.img)
  return p != NULL ? *p : *reinterpret_cast<const ::segment_service_input_Mat*>(
      &::_segment_service_input_Mat_default_instance_);
}
inline ::segment_service_input_Mat* segment_service_input::release_img() {
  // @@protoc_insertion_point(field_release:segment_service_input.img)
  
  ::segment_service_input_Mat* temp = img_;
  img_ = NULL;
  return temp;
}
inline ::segment_service_input_Mat* segment_service_input::mutable_img() {
  
  if (img_ == NULL) {
    auto* p = CreateMaybeMessage<::segment_service_input_Mat>(GetArenaNoVirtual());
    img_ = p;
  }
  // @@protoc_insertion_point(field_mutable:segment_service_input.img)
  return img_;
}
inline void segment_service_input::set_allocated_img(::segment_service_input_Mat* img) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete img_;
  }
  if (img) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      img = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, img, submessage_arena);
    }
    
  } else {
    
  }
  img_ = img;
  // @@protoc_insertion_point(field_set_allocated:segment_service_input.img)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_segment_5fservice_5finput_2eproto
