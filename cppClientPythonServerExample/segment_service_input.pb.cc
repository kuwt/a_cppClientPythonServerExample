// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: segment_service_input.proto

#include "segment_service_input.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_segment_5fservice_5finput_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_segment_5fservice_5finput_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_segment_service_input_Mat;
}  // namespace protobuf_segment_5fservice_5finput_2eproto
class segment_service_input_MatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<segment_service_input_Mat>
      _instance;
} _segment_service_input_Mat_default_instance_;
class segment_service_inputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<segment_service_input>
      _instance;
} _segment_service_input_default_instance_;
namespace protobuf_segment_5fservice_5finput_2eproto {
static void InitDefaultssegment_service_input_Mat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_segment_service_input_Mat_default_instance_;
    new (ptr) ::segment_service_input_Mat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::segment_service_input_Mat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_segment_service_input_Mat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssegment_service_input_Mat}, {}};

static void InitDefaultssegment_service_input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_segment_service_input_default_instance_;
    new (ptr) ::segment_service_input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::segment_service_input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_segment_service_input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssegment_service_input}, {
      &protobuf_segment_5fservice_5finput_2eproto::scc_info_segment_service_input_Mat.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_segment_service_input_Mat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_segment_service_input.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input_Mat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input_Mat, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input_Mat, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input_Mat, image_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::segment_service_input, img_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::segment_service_input_Mat)},
  { 8, -1, sizeof(::segment_service_input)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_segment_service_input_Mat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_segment_service_input_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "segment_service_input.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033segment_service_input.proto\"\214\001\n\025segmen"
      "t_service_input\022\020\n\010class_id\030\001 \001(\r\022\'\n\003img"
      "\030\002 \001(\0132\032.segment_service_input.Mat\0328\n\003Ma"
      "t\022\r\n\005width\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\022\022\n\nimag"
      "e_data\030\003 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "segment_service_input.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_segment_5fservice_5finput_2eproto

// ===================================================================

void segment_service_input_Mat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int segment_service_input_Mat::kWidthFieldNumber;
const int segment_service_input_Mat::kHeightFieldNumber;
const int segment_service_input_Mat::kImageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

segment_service_input_Mat::segment_service_input_Mat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_segment_5fservice_5finput_2eproto::scc_info_segment_service_input_Mat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:segment_service_input.Mat)
}
segment_service_input_Mat::segment_service_input_Mat(const segment_service_input_Mat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_data().size() > 0) {
    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:segment_service_input.Mat)
}

void segment_service_input_Mat::SharedCtor() {
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

segment_service_input_Mat::~segment_service_input_Mat() {
  // @@protoc_insertion_point(destructor:segment_service_input.Mat)
  SharedDtor();
}

void segment_service_input_Mat::SharedDtor() {
  image_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void segment_service_input_Mat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* segment_service_input_Mat::descriptor() {
  ::protobuf_segment_5fservice_5finput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_segment_5fservice_5finput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const segment_service_input_Mat& segment_service_input_Mat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_segment_5fservice_5finput_2eproto::scc_info_segment_service_input_Mat.base);
  return *internal_default_instance();
}


void segment_service_input_Mat::Clear() {
// @@protoc_insertion_point(message_clear_start:segment_service_input.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool segment_service_input_Mat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:segment_service_input.Mat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:segment_service_input.Mat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:segment_service_input.Mat)
  return false;
#undef DO_
}

void segment_service_input_Mat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:segment_service_input.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->width(), output);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height(), output);
  }

  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->image_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:segment_service_input.Mat)
}

::google::protobuf::uint8* segment_service_input_Mat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:segment_service_input.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->width(), target);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height(), target);
  }

  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->image_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:segment_service_input.Mat)
  return target;
}

size_t segment_service_input_Mat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:segment_service_input.Mat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image_data());
  }

  // uint32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void segment_service_input_Mat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:segment_service_input.Mat)
  GOOGLE_DCHECK_NE(&from, this);
  const segment_service_input_Mat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const segment_service_input_Mat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:segment_service_input.Mat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:segment_service_input.Mat)
    MergeFrom(*source);
  }
}

void segment_service_input_Mat::MergeFrom(const segment_service_input_Mat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:segment_service_input.Mat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_data().size() > 0) {

    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void segment_service_input_Mat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:segment_service_input.Mat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void segment_service_input_Mat::CopyFrom(const segment_service_input_Mat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:segment_service_input.Mat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool segment_service_input_Mat::IsInitialized() const {
  return true;
}

void segment_service_input_Mat::Swap(segment_service_input_Mat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void segment_service_input_Mat::InternalSwap(segment_service_input_Mat* other) {
  using std::swap;
  image_data_.Swap(&other->image_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata segment_service_input_Mat::GetMetadata() const {
  protobuf_segment_5fservice_5finput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_segment_5fservice_5finput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void segment_service_input::InitAsDefaultInstance() {
  ::_segment_service_input_default_instance_._instance.get_mutable()->img_ = const_cast< ::segment_service_input_Mat*>(
      ::segment_service_input_Mat::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int segment_service_input::kClassIdFieldNumber;
const int segment_service_input::kImgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

segment_service_input::segment_service_input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_segment_5fservice_5finput_2eproto::scc_info_segment_service_input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:segment_service_input)
}
segment_service_input::segment_service_input(const segment_service_input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_img()) {
    img_ = new ::segment_service_input_Mat(*from.img_);
  } else {
    img_ = NULL;
  }
  class_id_ = from.class_id_;
  // @@protoc_insertion_point(copy_constructor:segment_service_input)
}

void segment_service_input::SharedCtor() {
  ::memset(&img_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class_id_) -
      reinterpret_cast<char*>(&img_)) + sizeof(class_id_));
}

segment_service_input::~segment_service_input() {
  // @@protoc_insertion_point(destructor:segment_service_input)
  SharedDtor();
}

void segment_service_input::SharedDtor() {
  if (this != internal_default_instance()) delete img_;
}

void segment_service_input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* segment_service_input::descriptor() {
  ::protobuf_segment_5fservice_5finput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_segment_5fservice_5finput_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const segment_service_input& segment_service_input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_segment_5fservice_5finput_2eproto::scc_info_segment_service_input.base);
  return *internal_default_instance();
}


void segment_service_input::Clear() {
// @@protoc_insertion_point(message_clear_start:segment_service_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && img_ != NULL) {
    delete img_;
  }
  img_ = NULL;
  class_id_ = 0u;
  _internal_metadata_.Clear();
}

bool segment_service_input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:segment_service_input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 class_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .segment_service_input.Mat img = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_img()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:segment_service_input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:segment_service_input)
  return false;
#undef DO_
}

void segment_service_input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:segment_service_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 class_id = 1;
  if (this->class_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->class_id(), output);
  }

  // .segment_service_input.Mat img = 2;
  if (this->has_img()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_img(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:segment_service_input)
}

::google::protobuf::uint8* segment_service_input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:segment_service_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 class_id = 1;
  if (this->class_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->class_id(), target);
  }

  // .segment_service_input.Mat img = 2;
  if (this->has_img()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_img(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:segment_service_input)
  return target;
}

size_t segment_service_input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:segment_service_input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .segment_service_input.Mat img = 2;
  if (this->has_img()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *img_);
  }

  // uint32 class_id = 1;
  if (this->class_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void segment_service_input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:segment_service_input)
  GOOGLE_DCHECK_NE(&from, this);
  const segment_service_input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const segment_service_input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:segment_service_input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:segment_service_input)
    MergeFrom(*source);
  }
}

void segment_service_input::MergeFrom(const segment_service_input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:segment_service_input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_img()) {
    mutable_img()->::segment_service_input_Mat::MergeFrom(from.img());
  }
  if (from.class_id() != 0) {
    set_class_id(from.class_id());
  }
}

void segment_service_input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:segment_service_input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void segment_service_input::CopyFrom(const segment_service_input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:segment_service_input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool segment_service_input::IsInitialized() const {
  return true;
}

void segment_service_input::Swap(segment_service_input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void segment_service_input::InternalSwap(segment_service_input* other) {
  using std::swap;
  swap(img_, other->img_);
  swap(class_id_, other->class_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata segment_service_input::GetMetadata() const {
  protobuf_segment_5fservice_5finput_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_segment_5fservice_5finput_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::segment_service_input_Mat* Arena::CreateMaybeMessage< ::segment_service_input_Mat >(Arena* arena) {
  return Arena::CreateInternal< ::segment_service_input_Mat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::segment_service_input* Arena::CreateMaybeMessage< ::segment_service_input >(Arena* arena) {
  return Arena::CreateInternal< ::segment_service_input >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
